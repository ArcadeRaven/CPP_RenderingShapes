





/* ================================================================================================
PROGRAMMER:
Trey Alexander, Tyler Glick, Ethan Tanner
COURSE : CSC 525 / 625
LAST MODIFIED DATE : 3 / 21 / 2022
DESCRIPTION : Creates an image of our combined knowledge from the semester thus far.
NOTE : N / A
FILES : Team2Project1.cpp
IDE / COMPILER : MicroSoft Visual Studio 2019
INSTRUCTION FOR COMPILATION AND EXECUTION :
1.
Double click on Team2Project1.sln to OPEN the project
2.
Press Ctrl + F7
to COMPILE
3.
Press Ctrl + F5
to EXECUTE
==================================================================================================*/
#include <iostream>
#include <string>
#include <GL/glut.h> 
// include GLUT library
using namespace std;

#define drawOneLine(x1,y1,x2,y2)  glBegin(GL_LINES);  \
   glVertex2f ((x1),(y1)); glVertex2f ((x2),(y2)); glEnd(); // for line drawing

string text;
//********* Prototypes ************************************************************** */
void myInit();
void myDisplayCallback();
void drawBitmap();
void drawLines();
void patternPolygons();
void emptyCircles();
void pixelMap();
void drawCaption();
//********* Subroutines *************************************************************
int main(int argc, char** argv)
{


glutInit(&argc, argv);
// initialization

glutInitWindowSize(400, 400);
// specify a window size

glutInitWindowPosition(100, 0);
// specify a window position

glutCreateWindow("Project 1");
// create a titled window

myInit();
// specify some settings


glutDisplayFunc(myDisplayCallback);
// register a callback

glutMainLoop();
// get into an infinite loop


return 1;
// something wrong happened
}
//***********************************************************************************
void drawBitmap()
{

	GLubyte bee[] = { // bits for a bitmap making a bee.

	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf3, 0xcf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe7, 0xc0, 0x7f, 0xe7, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xe0, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x0f, 0xff, 0xff, 0xf0, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x03, 0xff, 0xff, 0xc0, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0xff, 0xff, 0x00, 0x41, 0xe0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0xe0, 0xf0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0xe0, 0x70, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0xe0, 0x70, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x07, 0xe0, 0x00, 0xe0, 0x38, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x1c, 0x7f, 0xf0, 0x03, 0xe0, 0x00, 0xe0, 0x38, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x1c, 0x7f, 0xf0, 0x03, 0xc0, 0x1f, 0xff, 0x38, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x1c, 0x7f, 0xf0, 0x03, 0xe0, 0x1f, 0xff, 0x38, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x60, 0x38, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0xe0, 0x70, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0xe0, 0x70, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x7c, 0x3e, 0x00, 0xe0, 0xf0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0xf8, 0x1f, 0x00, 0x61, 0xe0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x03, 0xe0, 0x07, 0xc0, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x0f, 0xc0, 0x03, 0xf0, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	};

	glPointSize(1);

	glBegin(GL_POINTS);
	// use points to form X-/Y-axes

	glColor3f(0, 0, 0);
	// change drawing color to black

	for (int x = -150; x <= 150; x++) // draw X-axis

		glVertex2i(x, 0);

	for (int y = -150; y <= 150; y++) // draw Y-axis

		glVertex2i(0, y);

	glEnd();

	int x_axis = 88;

	int y_axis = 89;

	glColor3f(1.0f, 0.0f, 0.0f); //set color to red

	glRasterPos2f(155, -1);
	//set position of x axis label

	glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_10, x_axis); //display x axis label

	glRasterPos2f(-2, 155); //set position of y axis label

	glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_10, y_axis); // display y axis label

	GLfloat x = 128, y = 50, xorig = 50, yorig = 150;

	glBitmap(x, y, xorig, yorig, 1, 1, bee); //load bitmap
}

//***********************************************************************************

void drawLines()
{ // draws line segments
	glColor3f(0, 0, 1.0f); // color = blue

	drawOneLine(-73, -73, 73, 73); // diagonal bot left to top right

	drawOneLine(73, -73, -73, 73); // diagonal bot right to top left

	drawOneLine(73, 73, -73, 73); // top line

	drawOneLine(-73, -73, 73, -73); // bot line
}

//***********************************************************************************

void patternPolygons()
{ // draws polygons filled with stipple patterns
	// draws target triangle
	glColor3f(0, 1, 0);
	glEnable(GL_POLYGON_STIPPLE);
	//glPolygonStipple();
	glBegin(GL_TRIANGLES); // draws triangle
	glVertex2f(17.5, 75); // points
	glVertex2f(0, 85); // points
	glVertex2f(35, 85); // points
	glEnd();
}

//***********************************************************************************

void emptyCircles()
{ // draws empty circles
	glPointSize(5);
	// set point size to 5

	// draws a circle
	for (int i = 0; i <= 360; i++) {
		// drawing the face; use 360 for 360 degrees

		float x = 100 * cos(i * 3.14 / 180) + 0;
		// find location of the x coordinate

		float y = 100 * sin(i * 3.14 / 180) + 0;
		// find location of the y coordinate

		glBegin(GL_POINTS);

		glColor3f(255, 0, 255);
		// set the color (I chose purple)

		glVertex2i(x, y);
		// draw the point using the x and y variable

		glEnd();

	}
}

//***********************************************************************************

void pixelMap()
{ // draws a pixel map

}

void caption()
{ // writes a caption to the image

	glRasterPos2f(-40, -140);

	string text = "This is our project!";

	for (int i = 0; i < text.length(); i++)

	{

		glutBitmapCharacter(GLUT_BITMAP_HELVETICA_10, text[i]
		); // display each letter of the string on screen in order with a for loop

	}
}

void drawTitle()
{ // writes a title for the project at the top
	glColor3f(0, 1.0f, 0);

	glRasterPos2f(-30, 130);

	string title = "BEE HUNT!";

	for (int i = 0; i < title.length(); i++)
{

	glutBitmapCharacter(GLUT_BITMAP_HELVETICA_10, title[i]
	); // display each letter of the string on screen in order with a for loop

}
}

//***********************************************************************************
void myInit()
{

	glClearColor(1, 1, 1, 0);
	// specify a background clor: white 

	gluOrtho2D(-200, 200, -200, 200); // specify a viewing area
}
//***********************************************************************************
void myDisplayCallback()
{

	glClear(GL_COLOR_BUFFER_BIT);
	// draw the background

	drawBitmap();

	drawLines();

	emptyCircles();

	patternPolygons();

	drawLines();

	caption();

	drawTitle();

	glFlush(); // flush out the buffer contents
}

